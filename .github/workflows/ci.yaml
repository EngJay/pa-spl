name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.60.0, stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - name: Install target needed
        run: rustup target add thumbv7em-none-eabihf
      - name: Build driver (release)
        run: |
          cargo build --release
      - name: Build example
        run: |
          cargo build
        working-directory: examples/read-decibel-value

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/engjay/build-rustc-1-78-thumbv7em-nehf-meson:0.1.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: -h gha.ci.unit-tests
    steps:
      - uses: actions/checkout@v4
      - name: Run unit tests with coverage
        run: |
          CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='cargo-test-%p-%m.profraw' cargo test
      - name: Generate coverage report
        run: |
          mkdir -p target/coverage
          grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/tests.lcov
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report.lcov
          path: target/coverage/tests.lcov

  analysis:
    name: Analysis
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/engjay/build-rustc-1-78-thumbv7em-nehf-meson:0.1.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: -h gha.ci.analysis
    steps:
      - uses: actions/checkout@v4
      - name: Run clippy
        run: |
          cargo clippy -- -A clippy::all
      - name: Format
        run: |
          cargo fmt --all -- --check

  docs:
    name: Docs
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/engjay/build-rustc-1-78-thumbv7em-nehf-meson:0.1.0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: -h gha.ci.docs
    steps:
      - uses: actions/checkout@v4
      - name: Run rustdoc
        run: |
          cargo doc
      - uses: actions/upload-artifact@v4
        with:
          name: docs
          path: target/doc/pcb_artists_spl
